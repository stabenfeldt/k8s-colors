# from https://cloud.google.com/sql/docs/postgres/connect-kubernetes-engine
apiVersion: apps/v1
kind: Deployment
metadata:
  name: colors
  labels:
    app: colors

spec:
  replicas: 2
  selector:
    matchLabels:
      app: colors
  template:
    metadata:
      labels:
        app: colors
    spec:
      containers:
        - name: colors
          image: docker.io/stabenfeldt/colors:latest
          ports:
            - name: http-server
              containerPort: 3000

          # livenessProbe:
          #   httpGet:
          #     path: /_health
          #     port: 3000
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 1
          # readinessProbe:
          #   httpGet:
          #     path: /_health
          #     port: 3000
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 1

          # The following environment variables will contain the database host,
          # user and password to connect to the PostgreSQL instance.
          env:
            - name: POSTGRES_HOST
              value: 127.0.0.1:5432
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password

        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=MY-INSTANCE:europe-west1:staging=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true

      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials

---


apiVersion: v1
kind: Service
metadata:
  name: colors
  labels:
    app: colors
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http-server
  selector:
    app: colors
